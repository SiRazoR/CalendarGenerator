package com.calendargenerator.controller;

import com.calendargenerator.model.CombinedUekGroups;
import com.calendargenerator.model.UekGroup;
import com.calendargenerator.service.CalendarService;
import org.jsondoc.core.annotation.Api;
import org.jsondoc.core.annotation.ApiMethod;
import org.jsondoc.core.annotation.ApiPathParam;
import org.jsondoc.core.pojo.ApiStage;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Map;

@RestController
@Api(name = "UEK calendar generator API",
        description = "Provides list of methods that can manipulate with UEK schedule and output google ical file/URL directly to the calendar",
        stage = ApiStage.ALPHA)
@RequestMapping(value = "/calendar")
public class CalendarController {

    private final CalendarService calendarService;

    @Autowired
    public CalendarController(CalendarService calendarService) {
        this.calendarService = calendarService;
    }

    @ApiMethod(description = "Redirect to main page")
    @RequestMapping(value = "/", method = RequestMethod.GET, produces = MediaType.TEXT_PLAIN_VALUE)
    public String greet() {
        return "Add group id to URL above after /";
    }

    @ApiMethod(description = "Get ical file using provided group id")
    @RequestMapping(value = "/{groupId}", method = RequestMethod.GET, produces = MediaType.TEXT_PLAIN_VALUE)
    public ResponseEntity<String> schedule(@ApiPathParam(name = "groupId", description = "Group id, example: 140781")
                                               @PathVariable String groupId) {
        return calendarService.getSchedule(groupId);
    }

    @ApiMethod(description = "Get ical file with previously generated id")
    @RequestMapping(value = "/modified/{calendarGeneratedId}", method = RequestMethod.GET, produces = MediaType.TEXT_PLAIN_VALUE)
    public ResponseEntity<String> modifiedSchedule(@ApiPathParam(name = "calendarGeneratedId", description = "Id generated by POST method")
                                                       @PathVariable String calendarGeneratedId) {
        return calendarService.getModifiedSchedule(calendarGeneratedId);
    }

    @ApiMethod(description = "Get distinct lecture list using provided group id")
    @RequestMapping(value = "/distinct/{groupId}", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)
    public ResponseEntity<List> distinctLectures(@ApiPathParam(name = "groupId", description = "Group id, example: 140781")
                                                     @PathVariable String groupId) {
        return calendarService.getDistinctLectures(groupId);
    }

    @ApiMethod(description = "Method is extracting data about mandatory lectures from request body, then returns unique id that redirect to this record")
    @RequestMapping(value = "/", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)
    public ResponseEntity<Map> generateUniqueLink(@RequestBody UekGroup uekGroup) {
        return calendarService.generateUniqueLink(uekGroup);
    }

    //TEST PURPOSES
    @ApiMethod(description = "Method for test purposes. It returns all groups from database")
    @RequestMapping(value = "/getAll", method = RequestMethod.GET)
    public ResponseEntity<List<UekGroup>> getAll() {
        return calendarService.getAllGroupsFromDatabase();
    }

    //TEST PURPOSES
    @ApiMethod(description = "Method for test purposes. It returns all combined groups from database")
    @RequestMapping(value = "/getAllCombined", method = RequestMethod.GET)
    public ResponseEntity<List<CombinedUekGroups>> getAllCombined() {
        return calendarService.getAllCombinedGroupsFromDatabase();
    }
}

